// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: fetcherpb/fetcher.proto

package fetcherpb

import (
	sharedpb "github.com/bushnelljw-git/protos/go/sharedpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FetchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchRequest) Reset() {
	*x = FetchRequest{}
	mi := &file_fetcherpb_fetcher_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRequest) ProtoMessage() {}

func (x *FetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fetcherpb_fetcher_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRequest.ProtoReflect.Descriptor instead.
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return file_fetcherpb_fetcher_proto_rawDescGZIP(), []int{0}
}

func (x *FetchRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type FetchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reviews       []*sharedpb.Review     `protobuf:"bytes,1,rep,name=reviews,proto3" json:"reviews,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchResponse) Reset() {
	*x = FetchResponse{}
	mi := &file_fetcherpb_fetcher_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchResponse) ProtoMessage() {}

func (x *FetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fetcherpb_fetcher_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchResponse.ProtoReflect.Descriptor instead.
func (*FetchResponse) Descriptor() ([]byte, []int) {
	return file_fetcherpb_fetcher_proto_rawDescGZIP(), []int{1}
}

func (x *FetchResponse) GetReviews() []*sharedpb.Review {
	if x != nil {
		return x.Reviews
	}
	return nil
}

var File_fetcherpb_fetcher_proto protoreflect.FileDescriptor

const file_fetcherpb_fetcher_proto_rawDesc = "" +
	"\n" +
	"\x17fetcherpb/fetcher.proto\x12\tfetcherpb\x1a\x15sharedpb/shared.proto\"'\n" +
	"\fFetchRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\";\n" +
	"\rFetchResponse\x12*\n" +
	"\areviews\x18\x01 \x03(\v2\x10.sharedpb.ReviewR\areviews2R\n" +
	"\rReviewFetcher\x12A\n" +
	"\fFetchReviews\x12\x17.fetcherpb.FetchRequest\x1a\x18.fetcherpb.FetchResponseB9Z7github.com/bushnelljw-git/protos/go/fetcherpb;fetcherpbb\x06proto3"

var (
	file_fetcherpb_fetcher_proto_rawDescOnce sync.Once
	file_fetcherpb_fetcher_proto_rawDescData []byte
)

func file_fetcherpb_fetcher_proto_rawDescGZIP() []byte {
	file_fetcherpb_fetcher_proto_rawDescOnce.Do(func() {
		file_fetcherpb_fetcher_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fetcherpb_fetcher_proto_rawDesc), len(file_fetcherpb_fetcher_proto_rawDesc)))
	})
	return file_fetcherpb_fetcher_proto_rawDescData
}

var file_fetcherpb_fetcher_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_fetcherpb_fetcher_proto_goTypes = []any{
	(*FetchRequest)(nil),    // 0: fetcherpb.FetchRequest
	(*FetchResponse)(nil),   // 1: fetcherpb.FetchResponse
	(*sharedpb.Review)(nil), // 2: sharedpb.Review
}
var file_fetcherpb_fetcher_proto_depIdxs = []int32{
	2, // 0: fetcherpb.FetchResponse.reviews:type_name -> sharedpb.Review
	0, // 1: fetcherpb.ReviewFetcher.FetchReviews:input_type -> fetcherpb.FetchRequest
	1, // 2: fetcherpb.ReviewFetcher.FetchReviews:output_type -> fetcherpb.FetchResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_fetcherpb_fetcher_proto_init() }
func file_fetcherpb_fetcher_proto_init() {
	if File_fetcherpb_fetcher_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fetcherpb_fetcher_proto_rawDesc), len(file_fetcherpb_fetcher_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fetcherpb_fetcher_proto_goTypes,
		DependencyIndexes: file_fetcherpb_fetcher_proto_depIdxs,
		MessageInfos:      file_fetcherpb_fetcher_proto_msgTypes,
	}.Build()
	File_fetcherpb_fetcher_proto = out.File
	file_fetcherpb_fetcher_proto_goTypes = nil
	file_fetcherpb_fetcher_proto_depIdxs = nil
}
